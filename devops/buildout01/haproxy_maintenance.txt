haproxy_maintenance.txt

3.0.0 => # add and configure a load balancer on the 3rd server to load balance between the webservers
    3.0.1 # round robin is simplest since we don't expect to scale and we won't be receiving traffic. 
    3.0.1 => lb-haproxy-a
    ### INITIAL CONFIG
        3.1.0 => # change hostname to lb-haproxy-a (backup first)
          3.1.1 =>  mkdir /root/challenges
          3.1.2 =>  cp /etc/hostname /root/challenges/hostname.bac
          3.1.3 =>  hostname "lb-haproxy-a"
          3.1.4 =>  echo "lb-haproxy-a" > /etc/hostname
          3.1.5 =>  # replace old hostname with new hostname in /etc/hosts with sed
            3.1.5.1 => sed "s/"$(cat /root/challenges/hostname.bac)"/"$(hostname)"/g" -i /etc/hosts
          3.1.6 => ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
          3.1.7 =>  echo "lbhaproxya" > /etc/hostname
          3.1.8 =>  echo "$webnginxa web-nginx-a" >> /etc/hosts
          3.1.9 =>  echo "$webnginxb web-nginx-b" >> /etc/hosts
          3.1.90 => echo "$lbhaproxya  internal.zombo.com"  >> /etc/hosts
          3.1.91 => echo "$monitnagiosa monit-nagios-a" >> /etc/hosts
          3.1.92 => echo "alias vim=vim.tiny" >> ~/.bashrc && source ~/.bashrc
          3.1.93 => apt-get update 
          3.1.94 => ufw allow in on eth1
          3.1.95 => ufw default deny
          3.1.96 => useradd $sudoer
          3.1.97 => sed -i "/User privilege spec/a $sudoer  ALL=(ALL)       ALL" /etc/sudoers /etc/sudoers # appends after root user.
          3.1.98 => echo "$publickey"  >> /home/auser/authorized_keys
    ### ENABLE UFW
          3.1.99 => ufw enable
          3.1.990 => ufw allow in on eth0 to any port 80
          3.1.991 => ufw allow proto tcp from any to any port 60000:65000 # [6]
    ### HAPROXY
        3.2.0 => configure haproxy and forward ports 60000 to 65000 to port 80
          3.2.1 => apt-get install haproxy -y # force install haproxy
          3.2.2 => sed 's/ENABLED=0/ENABLED=1/g' -i /etc/default/haproxy # needs to be enabled for init. https://i.imgur.com/IppKJ.jpg
          3.2.3 => wget -P /etc/haproxy/ $haproxycfg [3][4]
          3.2.4 => service haproxy start
          3.2.5 => update-rc.d haproxy enable 
         
    ### NAGIOS PLUGIN
        3.3.0 => configure nagios plugin server
            3.3.1 => apt-get install nagios3 nagios-nrpe-plugin -y
            3.3.2 => update-rc.d nagios3 enable


ADDITIONAL NOTES
================

Initial config: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
Default load balancing (Round-Robin): http://nginx.org/en/docs/http/load_balancing.html
UFW: http://serverfault.com/questions/238563/can-i-use-ufw-to-setup-a-port-forward
HAProxy Example: https://cbonte.github.io/haproxy-dconv/configuration-1.4.html#2.3
