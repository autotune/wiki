nginx_maintenance.txt

1.0.0 Two web servers. One server 'a', the other 'b' at index.html 
    1.0.1 => web-nginx-a
    # https://xkcd.com/149/
    ### INITIAL CONFIG
        1.1.0 => # change hostname to web-nginx-a (backup first)
          1.1.1 =>  sudo mkdir /root/challenges
          1.1.2 =>  sudo cp /etc/hostname /root/challenges/hostname.bac
          1.1.3 =>  sudo hostname "web-nginx-a"
          1.1.4 =>  # replace old hostname with new hostname in /etc/hosts with sed
            1.1.4.1 => sudo sed "s/"$(cat /root/challenges/hostname.bac)"/"$(hostname)"/g" -i /etc/hosts
          1.1.5 =>  sudo echo "web-nginx-a" > /etc/hostname
          1.1.6 =>  sudo echo "$webnginxb web-nginx-b" >> /etc/hosts
          1.1.7 =>  sudo echo "$lbhaproxya  lb-haproxy-a internal.zombo.com"  >> /etc/hosts
          1.1.8 =>  sudo echo "$monitnagiosa monit-nagios-a" >> /etc/hosts
          1.2.9 =>  ssh-keygen -b 2048 -t rsa -f /home/ubuntu/.ssh/id_rsa -q -N ""
          1.2.90 => ssh-copy-id ubuntu@web-nginx-b # copy manually 
          1.2.91 => ssh-copy-id ubuntu@lb-haproxy-a # copy manually 
          1.2.92 => ssh-copy-id ubuntu@monit-nagios-a # copy manually 
          1.2.93 => echo "alias vim=vim.tiny" >> ~/.bashrc && source ~/.bashrc # doesn't apply to this environment.
          1.2.94 => sudo useradd $sudoer
          1.2.95 => sudo sed -i "/User privilege spec/a $sudoer  ALL=(ALL)       ALL" /etc/sudoers /etc/sudoers # appends after root user.
          1.2.96 => echo "$publickey"  >> /home/auser/authorized_keys

    ### ENABLE UFW
        1.2.0 => # open port 80
          1.2.1 => sudo ufw allow 80 
          1.2.2 => sudo ufw allow 22
          1.2.3 => sudo ufw default deny 
          1.2.4 => sudo ufw --force enable

    ### NGINX INSTALL AND CONFIG
        1.3.0 => install nginx without user input
          1.3.1 => sudo apt-get update
          1.3.2 => sudo apt-get install nginx -y 
          1.3.2 => sudo update-rc.d nginx defaults
          1.3.3 => sudo wget -q $nginxurl -O /etc/nginx/nginx.conf --no-check-certificate
          1.3.4 => sudo service nginx start
          1.3.5 => sudo sh -c "echo "a" > /var/www/nginx-default/index.html" # [9]
    ### NAGIOS PLUGIN SERVER 
         1.3.0 => install nginx plugin server to communicate with nagios
            1.3.1 =>  sudo apt-get install nagios-nrpe-server -y  # ostfix: local config. #host: web-nagios-a [8]
            1.3.2 =>  sudo wget -q $nrpeurl -O /etc/nagios/nrpe.cfg --no-check-certificate 
            1.3.3 =>  sudo service nagios-nrpe-server restart 
            1.3.4 =>  sudo update-rc.d nagios-nrpe-server enable

    2.0.0 => web-nginx-b
        2.1.0 =>  # change hostname to web-nginx-b (backup first)
        2.1.1 =>  sudo mkdir /root/challenges
        2.1.2 =>  sudo cp /etc/hostname /root/challenges/hostname.bac
        2.1.3 =>  sudo hostname "web-nginx-b"
        2.1.4 =>  sudo echo "web-nginx-b" > /etc/hostname
        2.1.5 =>  # replace old hostname with new hostname in /etc/hosts with sed
          2.1.5.1 => sudo sed "s/"$(cat /root/challenges/hostname.bac)"/"$(hostname)"/g" -i /etc/hosts
        2.1.6 =>  sudo echo "web-nginx-b" > /etc/hostname
        2.1.7 =>  sudo echo "$webnginxa  web-nginx-a" >> /etc/hosts # sudo -s here if needed
        2.1.7 =>  sudo echo "$lbhaproxya  lb-haproxy-a internal.zombo.com"  >> /etc/hosts
        2.1.8 =>  sudo echo "$monitnagiosa monit-nagios-a" >> /etc/hosts
        2.1.9 =>  ssh-keygen -b 2048 -t rsa -f /home/ubuntu/.ssh/id_rsa -q -N ""
        2.1.90 => echo "alias vim=vim.tiny" >> ~/.bashrc && source ~/.bashrc # doesn't apply to this environment.  
        2.1.91 => sudo useradd $sudoer
        2.2.92 => sudo sed -i "/User privilege spec/a $sudoer  ALL=(ALL)       ALL" /etc/sudoers /etc/sudoers # appends after root user.
    ### ENABLE UFW
        2.2.0 => # open port 80
          2.2.1 => sudo ufw allow 80 
          2.2.2 => sudo ufw allow in on eth1 # only allow internal network
          2.2.3 => sudo ufw default deny # deny everything else
          2.2.4 => sudo ufw --force enable
          
        2.3.0 => install nginx without user input
          2.3.1 => sudo apt-get update
          2.3.2 => sudo apt-get install nginx -y 
          2.3.3 => sudo update-rc.d nginx defaults
          2.3.4 => sudo wget -q $nginxurl -O /etc/nginx/nginx.conf --no-check-certificate 
          2.3.4 => sudo service nginx start
          2.3.5 => sudo sh -c "echo "b" > /var/www/nginx-default/index.html"

         2.4.0 => install nginx plugin server to communicate with nagios
            2.4.1 =>  sudo apt-get install nagios-nrpe-server -y  #[8] 
            2.4.2 =>  sudo wget -q $nrpeurl -O /etc/nagios/nrpe.cfg --no-check-certificate 
            2.4.3 =>  sudo service nagios-nrpe-server restart
            2.4.2 =>  sudo update-rc.d nagios-nrpe-server enable


GOTCHAS
=======
Figuring out x-forwarded-for and port forwarding proved rather time-consuming for haproxy and ensuring proper logging in nginx. 

